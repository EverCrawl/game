// Generated by packetc v0.2.3 at Thu, 11 Feb 2021 18:03:32 +0000
import { Reader, Writer } from "packet";
export interface Entity {
    uid: number,
    pos?: Position,
}
export interface Position {
    x: number,
    y: number,
}
export interface State {
    id: number,
    entities: Entity[],
}
export function read(reader: Reader, output: State) {
    output.id = reader.read_uint32();
    let output_entities_len = reader.read_uint32();
    output.entities = new Array(output_entities_len);
    for (let output_entities_index = 0; output_entities_index < output_entities_len; ++output_entities_index) {
        let output_entities_item: any = {};
        output_entities_item.uid = reader.read_uint32();
        if (reader.read_uint8() > 0) {
            let output_entities_item_pos: any = {};
            output_entities_item_pos.x = reader.read_float();
            output_entities_item_pos.y = reader.read_float();
            output_entities_item.pos = output_entities_item_pos;
        }
        output.entities[output_entities_index] = output_entities_item;
    }
}
export function write(writer: Writer, input: State) {
    writer.write_uint32(input.id);
    writer.write_uint32(input.entities.length);
    for (let input_entities_item of input.entities) {
        writer.write_uint32(input_entities_item.uid);
        let input_entities_item_pos = input_entities_item.pos;
        switch (input_entities_item_pos) {
            case undefined: case null: writer.write_uint8(0); break;
            default: {
                writer.write_uint8(1);
                writer.write_float(input_entities_item_pos.x);
                writer.write_float(input_entities_item_pos.y);
            }
        }
    }
}
