// Generated by packetc v0.3.4 at Mon, 01 Mar 2021 17:54:33 +0000
import { Reader, Writer } from "packet";
export namespace Transfer {
    export interface Entity {
        id: number,
        position: Position,
    }
    export interface Position {
        x: number,
        y: number,
    }
}
export class Transfer {
    constructor(
        public level: string,
        public x: number,
        public y: number,
        public entities: Transfer.Entity[],
    ) {}
    static read(data: ArrayBuffer): Transfer | null {
        let reader = new Reader(data);
        let output = Object.create(Transfer);
        let output_level_len = reader.read_uint32();
        output.level = reader.read_string(output_level_len);
        output.x = reader.read_float();
        output.y = reader.read_float();
        let output_entities_len = reader.read_uint32();
        output.entities = new Array(output_entities_len);
        for (let output_entities_index = 0; output_entities_index < output_entities_len; ++output_entities_index) {
            let output_entities_item: any = {};
            output_entities_item.id = reader.read_uint32();
            let output_entities_item_position: any = {};
            output_entities_item_position.x = reader.read_float();
            output_entities_item_position.y = reader.read_float();
            output_entities_item.position = output_entities_item_position;
            output.entities[output_entities_index] = output_entities_item;
        }
        if (reader.failed) return null;
        return output;
    }
    write(buffer?: ArrayBuffer): ArrayBuffer {
        let writer = buffer ? new Writer(buffer) : new Writer();
        writer.write_uint32(this.level.length);
        writer.write_string(this.level);
        writer.write_float(this.x);
        writer.write_float(this.y);
        writer.write_uint32(this.entities.length);
        for (let this_entities_index = 0; this_entities_index < this.entities.length; ++this_entities_index) {
            let this_entities_item = this.entities[this_entities_index];
            writer.write_uint32(this_entities_item.id);
            writer.write_float(this_entities_item.position.x);
            writer.write_float(this_entities_item.position.y);
        }
        return writer.finish();
    }
}
